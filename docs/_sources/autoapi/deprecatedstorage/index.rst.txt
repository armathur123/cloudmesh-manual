:mod:`deprecated-storage`
=========================

.. py:module:: deprecated-storage


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   deprecated-storage.Provider



.. class:: Provider(service=None)


   Bases: :class:`object`

   .. method:: create_dir(self, service=None, directory=None)

      creates a directory
      :param service: the name of the service in the yaml file
      :param directory: the name of the directory
      :return: dict


   .. method:: list(self, service=None, source=None, recursive=False)

      lists the information as dict
      :param service: the name of the service in the yaml file
      :param source: the source which either can be a directory or file
      :param recursive: in case of directory the recursive refers to all
                        subdirectories in the specified source
      :return: dict


   .. method:: put(self, service=None, source=None, destination=None, recursive=False)

      puts the source on the service
      :param service: the name of the service in the yaml file
      :param source: the source which either can be a directory or file
      :param destination: the destination which either can be a directory or file
      :param recursive: in case of directory the recursive refers to all
                        subdirectories in the specified source
      :return: dict


   .. method:: get(self, service=None, source=None, destination=None, recursive=False)

      gets the destination and copies it in source
      :param service: the name of the service in the yaml file
      :param source: the source which either can be a directory or file
      :param destination: the destination which either can be a directory or file
      :param recursive: in case of directory the recursive refers to all
                        subdirectories in the specified source
      :return: dict


   .. method:: delete(self, service=None, source=None, recursive=False)

      deletes the source
      :param service: the name of the service in the yaml file
      :param source: the source which either can be a directory or file
      :param recursive: in case of directory the recursive refers to all
                        subdirectories in the specified source
      :return: dict


   .. method:: search(self, service=None, directory=None, filename=None, recursive=False)

      gets the destination and copies it in source
      :param service: the name of the service in the yaml file
      :param directory: the directory which either can be a directory or file
      :param recursive: in case of directory the recursive refers to all
                        subdirectories in the specified source
      :return: dict


   .. method:: tree(self, directory=None)

      Prints a visual representation of the files and directories
      :param directory:
      :type directory:
      :return:
      :rtype:



